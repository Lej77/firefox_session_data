name: 'Publish new release'

on:
  push:
    tags: ['v*']

# This workflow will trigger on each push of a tag that starts with a "v" to create or update a GitHub release, build your app, and upload the artifacts to the release.
# Useful links:
# https://github.com/marketplace/actions/build-and-upload-rust-binary-to-github-releases
# https://github.com/marketplace/actions/rust-release-binary
# https://github.com/cargo-bins/cargo-binstall/blob/main/.github/workflows/release-packages.yml
# https://github.com/trunk-rs/trunk/blob/main/.github/workflows/release.yaml
# https://goreleaser.com/quick-start/


jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: 'macos-latest' # for Arm based macs (M1 and above).
            target: 'aarch64-apple-darwin'

          - platform: 'macos-latest' # for Intel based macs.
            target: 'x86_64-apple-darwin'

          - platform: 'ubuntu-22.04'
            target: 'x86_64-unknown-linux-gnu'

          - platform: 'ubuntu-22.04'
            target: 'wasm32-wasip1'
            ext: '.wasm'

          - platform: 'ubuntu-22.04'
            target: 'wasm32-wasip2'
            ext: '.wasm'

          - platform: 'windows-latest'
            target: 'x86_64-pc-windows-msvc'
            ext: '.exe'

    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v4

      - name: install Rust stable
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Build release binary
        run: cargo build --release --target ${{ matrix.target }}

      - name: Post Build | Move and rename binary
        run: |
          mkdir uploads
          mv target/${{ matrix.target }}/release/firefox-session-data${{ matrix.ext }} uploads/firefox-session-data-${{ matrix.target }}${{ matrix.ext }}

      - name: Post Build | Prepare artifacts [zip]
        if: matrix.platform == 'windows-latest'
        working-directory: uploads
        run: |
          7z a firefox-session-data-${{ matrix.target }}.zip firefox-session-data-${{ matrix.target }}${{ matrix.ext }}

      - name: Post Build | Prepare artifacts [tar.gz]
        if: matrix.platform != 'windows-latest'
        working-directory: uploads
        run: |
          tar --create --gzip --verbose --file  firefox-session-data-${{ matrix.target }}.tar.gz firefox-session-data-${{ matrix.target }}${{ matrix.ext }}

      - name: Post Build | Remove binary (now inside compressed artifact)
        working-directory: uploads
        run: |
          rm firefox-session-data-${{ matrix.target }}${{ matrix.ext }}

      - name: Post Build | Display structure of uploads folder
        run: ls uploads

      - name: Post Build | Upload binary
        uses: actions/upload-artifact@v4
        with:
          path: uploads/*
          retention-days: 1
          if-no-files-found: error

  release:
    name: Release
    runs-on: ubuntu-latest
    needs: build
    permissions:
      contents: write
    steps:
      - name: Download binary from previous job
        uses: actions/download-artifact@v4
        with:
          path: artifacts
          merge-multiple: true

      - name: Display structure of downloaded files
        run: ls artifacts

      # Upload release asset:  https://github.com/actions/upload-release-asset
      # which recommends:      https://github.com/softprops/action-gh-release
      - name: Release
        uses: softprops/action-gh-release@v2
        if: github.ref_type == 'tag'
        with:
          files: artifacts/*
